#!/usr/bin/perl -CDS

# KanjiVG per-kanji test
# checks for nodes that have groups and paths as siblings

use XML::Parser;
use utf8;

$parser=new XML::Parser(Style=>'Tree');

$parser->setHandlers(Char=>\&ignore_char);

sub ignore_char { }

$/=undef;
open(SVG,'kanji/'.shift.'.svg');
$_=<SVG>;
close(SVG);
$db=$parser->parse($_);

$exit_code=0;

($db->[0] eq 'svg') || die "unknown document tag";

for ($i=1;$i<=$#{$db->[1]};$i+=2) {
  next if $db->[1]->[$i] eq 0;
  next if $db->[1]->[$i] ne 'g';
  next if $db->[1]->[$i+1]->[0]->{'id'}=~/StrokeNumbers/;

  $db->[1]->[$i+1]->[0]->{'id'}=~/StrokePaths/
    || die 'unknown top-level group';
  for ($j=1;$j<=$#{$db->[1]->[$i+1]};$j+=2) {
    next if $db->[1]->[$i+1]->[$j] eq 0;
    $db->[1]->[$i+1]->[$j] eq 'g'
      || die 'unknown tag in top-level group';
    $in_top_group<1 || die 'too many children in top-level group';
    &process_group($db->[1]->[$i+1]->[$j+1]);
    $in_top_group++;
  }
}

sub process_group {
  my($group)=@_;
  my($i,$pcnt,$gcnt);
  
  $pcnt=0;
  $gcnt=0;
  for ($i=1;$i<=$#$group;$i+=2) {
    $pcnt++ if $group->[$i] eq 'path';
    $gcnt++ if $group->[$i] eq 'g';
  }
  
  if (($pcnt>0) && ($gcnt>0)) {
    print "Found $gcnt group".($gcnt>1?'s':'').
      " and $pcnt path".($pcnt>1?'s':'').
      " in the same node.\n";
    $exit_code=1;
  }

  for ($i=1;$i<=$#$group;$i+=2) {
    &process_group($group->[$i+1]) if $group->[$i] eq 'g';
  }
}

exit $exit_code;
